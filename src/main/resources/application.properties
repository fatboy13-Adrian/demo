#Uncomment to select between using PostgreSQL or H2 database
#Both databases are using the same URL link localhost:8080
spring.application.name=demo

#H2 Configuration (For demonstration and testing purposes)
#Enable H2 Console for web access
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#H2 database URL (in-memory database)
spring.datasource.url=jdbc:h2:mem:demodb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

#JDBC Driver class name for H2
spring.datasource.driverClassName=org.h2.Driver

#Database credentials for H2 im memory database
spring.datasource.username=sa
spring.datasource.password=password

#Hibernate Dialect for H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#H2 database initialization (optional)
spring.jpa.hibernate.ddl-auto=update

#Enable SQL logging in the console (optional, for debugging)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# #PostgreSQL Configuration (For production purposes)
# # PostgreSQL Database Configuration
# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# spring.datasource.username=postgres
# spring.datasource.password=P@$$w0rd
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.hikari.maximum-pool-size=10

# # Hibernate Dialect for PostgreSQL
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# # Show SQL Queries (Optional, useful for debugging)
# spring.jpa.show-sql=true

# # Format SQL Queries (Optional, useful for readability)
# spring.jpa.properties.hibernate.format_sql=true

# # DDL Auto (create, update, validate, none)
# spring.jpa.hibernate.ddl-auto=update  

# # Enable SQL Logging for better visibility (Optional)
# spring.jpa.properties.hibernate.generate_statistics=true

# # Additional Hibernate Properties (Optional)
# spring.jpa.properties.hibernate.id.new_generator_mappings=true
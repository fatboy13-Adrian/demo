package com.demo.Entity.Product;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity                         //Marks the class as a JPA entity, meaning it will be mapped to a database table
@Table(name = "product_categories")    //Specifies the table name in the database, if it's different from the class name (optional)
@Getter                         //Automatically generates getter methods for all fields
@Setter                         //Automatically generates setter methods for all fields
@NoArgsConstructor              //Generates a no-argument constructor (required for frameworks like JPA and Hibernate)
@AllArgsConstructor             //Generates a constructor with arguments for all fields (useful for object creation)
@Builder                        //Enables the builder pattern for constructing instances of the class in a more readable way
public class ProductCategory {
    @Id //Marks this field as the primary key in the database
    @GeneratedValue(strategy = GenerationType.IDENTITY)         //Automatically generates unique values for the primary key (usually for auto-incremented IDs)
    @Column(name = "pcid")                                //Specifies the column name in the database
    private Long pcid;                                    //Unique identifier for the inventory, typically auto-generated by the database

    @Column(name = "pid")
    @NotNull
    private Long pid;

    @Column(name = "categoryId")
    @NotNull
    private Long categoryId;
}

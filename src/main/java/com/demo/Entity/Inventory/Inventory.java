package com.demo.Entity.Inventory;
import jakarta.persistence.*; 
import jakarta.validation.constraints.NotNull; 
import lombok.*; 

@Entity                         //Marks the class as a JPA entity, meaning it will be mapped to a database table
@Table(name = "Inventories")    //Specifies the table name in the database, if it's different from the class name (optional)
@Getter                         //Automatically generates getter methods for all fields
@Setter                         //Automatically generates setter methods for all fields
@NoArgsConstructor              //Generates a no-argument constructor (required for frameworks like JPA and Hibernate)
@AllArgsConstructor             //Generates a constructor with arguments for all fields (useful for object creation)
@Builder                        //Enables the builder pattern for constructing instances of the class in a more readable way
public class Inventory 
{
    @Id //Marks this field as the primary key in the database
    @GeneratedValue(strategy = GenerationType.IDENTITY) //Automatically generates unique values for the primary key (usually for auto-incremented IDs)
    @Column(name = "sid")                               //Specifies the column name in the database
    private Long sid;                                   //Unique identifier for the inventory, typically auto-generated by the database

    @Column(name = "stockQty")
    @NotNull(message = "Stock quantity cannot be blank")//Validates that the stock quantity field cannot be null, provides a custom validation message
    private Integer stockQty;                           //Stock quantity for each inventory item
}